name: Mirror Rootfs Cache
on:
  workflow_dispatch:
  schedule:
    - cron: "30 0 * * *"

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:

  release-start:
    name: Prepare
    runs-on: [ubuntu-latest]
    timeout-minutes: 1440

    steps:

      - name: Purge old releases
        uses: Vucko130/delete-older-releases@v0.2.1
        with:
          repo: armbianworker/cache
          keep_latest: 1
          delete_tags: true
          delete_tag_pattern: "0"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get
        shell: bash
        run: |
        
          mkdir -p json
          sudo npm install --location=global json || true
          
          LATEST=$(gh release list --repo github.com/armbian/cache 2>/dev/null -L 1 | awk '{ print $3 }' | sed "s/#//g")

          gh release view ${LATEST} --repo $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/ || gh release create ${LATEST} -R $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/
        
          gh release view --json assets --repo github.com/armbian/cache 2>/dev/null | python3 -mjson.tool | sed '1,2d;$d' | json -ga name > a
          gh release view --json assets --repo $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/ 2>/dev/null | python3 -mjson.tool | sed '1,2d;$d' | json -ga name > b
        
          diff --new-line-format="" --unchanged-line-format="" a b | (while read -r line; do
          echo "Check if $line exists"
          if [[ -z $(gh release view ${LATEST} --repo $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/ | grep $line) ]]; then
              echo "Download"
              gh release download ${LATEST} --clobber --pattern $line -R https://github.com/armbian/cache
              echo "Upload"
              gh release upload ${LATEST} $line -R $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/ --clobber
              rm $line || true
          fi
          sleep 3
          
          done)
